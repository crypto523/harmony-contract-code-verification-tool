const { program } = require("commander")
const { version } = require("../package.json")

program
  .version(version)
  .command("verify")
  .description("(default) Verifies if the given contract address byte code matches that generated by the tool")
  .action(async(args, options) => {
    if (args) {
      const verify = require( "./verification/index" ).codeVerification
      let res = await Promise.resolve(verify(args))
      console.table(res)
      return res
      }
  })
  .requiredOption("-ca, --contractAddress <contractAddress>", "The address of the contract")
  .requiredOption("-sv, --solidityVersion <solidityVersion>", "The version of the Solidity compiler which was used to compile the contract (at deployment)")
  .requiredOption("-gu, --githubURL <githubURL>", "Github Repository URL, up to and including the *.sol file")
  .option("-ch, --commitHash <commitHash>", "(optional) Hash of the commit to check out")
  .option("-k, --keep", "(optional,default=false) Keep the Github repository after the process")
  .requiredOption("-c, --chainType <chainType>", "Chain type, for example, testnet or mainnet")
  .alias("v")
  .usage("command <options>")
  .parseAsync()
